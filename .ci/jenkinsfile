pipeline {
  agent any  
  def app
  options {
    // Keep the 10 most recent builds
    buildDiscarder(logRotator(numToKeepStr:'10')) 
  }
  stages {
    stage('Clone repository') {
        checkout scm
    }
    stage('Build image') {
        steps {
            echo 'START:BUILD_IMAGE'

            script {
                def image = docker.build("goneproject/engine", "-f .ci/docker/Dockerfile .")
                image.push()
            }
        }
    }

    stage('Test image') {
        image.inside {
            sh 'yarn run test'
        }

        archive includes: 'build/*'

        publishHTML target: [
            allowMissing: false,
            alwaysLinkToLastBuild: true,
            keepAll: true,
            reportDir: '.ci/reports/html',
            reportFiles: 'jest.html',
            reportName: 'GONEengine Report'
        ]
    }

    stage('Push image') {
        stages {
            script {
                docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                    image.push("${env.BUILD_NUMBER}")
                    image.push("latest")
                }
            }
        }
       
    }
  }
}